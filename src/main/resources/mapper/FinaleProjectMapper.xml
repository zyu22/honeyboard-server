<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.honeyboard.api.project.finale.mapper.FinaleProjectMapper">
	<!-- 프로젝트 리스트를 위한 ResultMap -->
	<resultMap id="finaleProjectListMap" type="FinaleProjectList">
		<id property="id" column="id"/>
		<result property="finaleTeamId" column="finaleTeamId"/>
		<result property="title" column="title"/>
		<result property="description" column="description"/>
		<result property="thumbnail" column="thumbnail"/>
		<result property="createdAt" column="createdAt"/>
		<collection property="members" ofType="ProjectUserInfo">
			<id property="id" column="user_id"/>
			<result property="name" column="user_name"/>
		</collection>
	</resultMap>

	<!-- 프로젝트 상세 기본 정보를 위한 ResultMap -->
	<resultMap id="finaleProjectDetailMap" type="FinaleProjectDetail">
		<id property="id" column="id"/>
		<result property="finaleTeamId" column="finaleTeamId"/>
		<result property="title" column="title"/>
		<result property="description" column="description"/>
		<result property="url" column="url"/>
		<result property="createdAt" column="createdAt"/>
	</resultMap>

	<!-- 프로젝트 리스트 조회 -->
	<select id="selectFinaleProjectList" resultMap="finaleProjectListMap">
		SELECT
			fp.id,
			fp.team_id AS finaleTeamId,
			fp.title,
			fp.description,
			fp.thumbnail,
			DATE_FORMAT(fp.created_at, '%Y-%m-%d %H:%i:%s') as createdAt,
			u.id AS user_id,
			u.name AS user_name
		FROM finale_project fp
				 LEFT JOIN finale_team_member ftm ON fp.team_id = ftm.finale_team_id
				 LEFT JOIN user u ON ftm.user_id = u.id
		WHERE fp.is_deleted = 0
		<if test="generationId != 0">
			AND generation_id = #{generationId}
		</if>
		ORDER BY fp.created_at DESC, u.id
	</select>

	<!-- 프로젝트 상세 조회 -->
	<select id="selectFinaleProjectDetail" parameterType="int" resultMap="finaleProjectDetailMap">
		SELECT
			id,
			team_id AS finaleTeamId,
			title,
			description,
			url,
			DATE_FORMAT(created_at, '%Y-%m-%d %H:%i:%s') as createdAt
		FROM finale_project
		WHERE id = #{finaleProjectId}
		  AND is_deleted = 0
	</select>

	<!-- 프로젝트 존재 여부 확인 -->
	<select id="checkFinaleProject" resultType="boolean">
		SELECT EXISTS (
			SELECT 1
			FROM finale_project
			WHERE id = #{finaleProjectId}
			  AND is_deleted = 0
		)
	</select>

	<!-- 마지막 생성된 ID 조회 -->
	<select id="selectLastInsertedId" resultType="int">
		SELECT LAST_INSERT_ID()
	</select>

	<!-- 프로젝트 생성 -->
	<insert id="insertFinaleProject" parameterType="FinaleProjectCreate">
		INSERT INTO finale_project (
			title,
			description,
			url,
			created_at,
			is_deleted
		) VALUES (
					 #{finaleProjectCreate.title},
					 #{finaleProjectCreate.description},
					 #{finaleProjectCreate.url},
					 NOW(),
					 0
				 )
	</insert>

	<!-- 프로젝트 수정 -->
	<update id="updateFinaleProject">
		UPDATE finale_project
		SET
			title = #{request.title},
			description = #{request.description},
			url = #{request.url}
		WHERE id = #{finaleProjectId}
		  AND is_deleted = 0
	</update>

	<!-- 프로젝트 삭제 -->
	<update id="updateFinaleProjectDeleteStatus" parameterType="int">
		Update finale_project
		SET
			is_deleted = 1
		WHERE id = #{finaleProjectId}
		  AND is_deleted = 0
	</update>
</mapper>
