<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.honeyboard.api.project.finale.mapper.FinaleProjectBoardMapper">
    <!-- 게시글 상세 조회를 위한 ResultMap -->
    <resultMap id="finaleProjectBoardDetailMap" type="FinaleProjectBoardDetail">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="createdAt"/>
        <collection property="members" ofType="TeamMemberInfo">
            <id property="id" column="memberId"/>
            <result property="name" column="memberName"/>
            <result property="role" column="memberRole"/>
        </collection>
    </resultMap>

    <!-- 프로젝트 게시판 목록 조회 -->
    <select id="selectFinaleProjectDetailBoards" parameterType="int" resultType="FinaleProjectBoardList">
        SELECT
            id,
            title,
            DATE_FORMAT(created_at, '%Y-%m-%d %H:%i:%s') as createdAt,
            thumbnail
        FROM finale_project_board
        WHERE finale_project_id = #{finaleProjectId}
        AND is_deleted = 0
        ORDER BY created_at DESC
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="selectFinaleProjectBoardDetail" resultMap="finaleProjectBoardDetailMap">
        SELECT
            fpb.id,
            fpb.title,
            fpb.summary,
            fpb.content,
            DATE_FORMAT(fpb.created_at, '%Y-%m-%d %H:%i:%s') as createdAt,
            u.id as memberId,
            u.name as memberName,
            ftm.role as memberRole
        FROM finale_project_board fpb
                 JOIN finale_project fp ON fpb.finale_project_id = fp.id
                 JOIN finale_team_member ftm ON fp.team_id = ftm.finale_team_id
                 JOIN user u ON ftm.user_id = u.id
        WHERE fpb.id = #{boardId}
          AND fp.id = #{finaleProjectId}
          AND fp.is_deleted = 0
        ORDER BY
            CASE ftm.role
                WHEN 'LEADER' THEN 1
                WHEN 'MEMBER' THEN 2
                END
    </select>

    <!-- 게시글 존재 여부 확인 -->
    <select id="checkFinaleProjectBoard" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM finale_project_board fpb
                     JOIN finale_project fp ON fpb.finale_project_id = fp.id
            WHERE fp.id = #{finaleProjectId}
              AND fpb.id = #{boardId}
              AND fp.is_deleted = 0
        )
    </select>

    <!-- 게시글 작성 -->
    <insert id="insertFinaleProjectBoard" useGeneratedKeys="true" keyProperty="board.id">
        INSERT INTO finale_project_board (
            finale_project_id,
            finale_team_id,
            summary,
            title,
            content,
            user_id,
            thumbnail,
            created_at
        ) VALUES (
                     #{finaleProjectId},
                     #{board.finaleTeamId},
                     #{board.summary},
                     #{board.title},
                     #{board.content},
                     #{board.userId},
                     #{board.thumbnail},
                     NOW()
                 )
    </insert>

    <!-- 게시글 수정 -->
    <update id="updateFinaleProjectBoard">
        UPDATE finale_project_board
        SET
            title = #{request.title},
            summary = #{request.summary},
            content = #{request.content},
            thumbnail = #{request.thumbnail}
        WHERE id = #{finaleProjectBoardId}
          AND finale_project_id = #{finaleProjectId}
    </update>

    <!-- 게시글 삭제 -->
    <update id="deleteFinaleProjectBoard">
        UPDATE finale_project_board
        SET
            is_deleted = 1
        WHERE id = #{finaleProjectBoardId}
        AND finale_project_id = #{finaleProjectId}
    </update>

    <!-- 마지막 생성된 게시글 ID 조회 -->
    <select id="selectLastInsertedBoardId" resultType="int">
        SELECT LAST_INSERT_ID()
    </select>
</mapper>
