<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honeyboard.api.project.track.mapper.TrackTeamMapper">
    <!-- 팀 멤버 -->
    <resultMap id="teamMemberInfoMap" type="com.honeyboard.api.project.track.model.TeamMemberInfo">
        <id property="userId" column="user_id"/>
        <result property="userName" column="name" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 팀 상태 -->
    <resultMap id="teamStatusMap" type="com.honeyboard.api.project.track.model.TeamStatus">
        <id property="teamId" column="team_id"/>
        <result property="isCompleted" column="is_completed" jdbcType="BOOLEAN"/>
        <collection property="members" ofType="com.honeyboard.api.project.track.model.TeamMemberInfo">
            <id property="userId" column="user_id"/>
            <result property="userName" column="name" jdbcType="VARCHAR"/>
            <result property="role" column="role" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!-- 전체 결과 -->
    <resultMap id="trackProjectStatusMap" type="com.honeyboard.api.project.track.model.TrackProjectStatus">
        <id property="projectId" column="project_id"/>
        <result property="projectName" column="project_name" jdbcType="VARCHAR"/>
        <result property="totalTeams" column="total_teams"/>
        <result property="completedTeams" column="completed_teams"/>
        <result property="noTeamMembersCount" column="no_team_members_count"/>

        <!-- 팀 목록 -->
        <collection property="teams" ofType="com.honeyboard.api.project.track.model.TeamStatus">
            <id property="teamId" column="team_id"/>
            <result property="isCompleted" column="is_completed"/>
            <collection property="members" ofType="com.honeyboard.api.project.track.model.TeamMemberInfo">
                <id property="userId" column="user_id"/>
                <result property="userName" column="name"/>
                <result property="role" column="role"/>
            </collection>
        </collection>

        <!-- 미편성 멤버 목록 -->
        <collection property="noTeamMembers" ofType="com.honeyboard.api.project.track.model.TeamMemberInfo">
            <id property="userId" column="no_team_user_id"/>
            <result property="userName" column="no_team_user_name"/>
            <result property="role" column="no_team_role"/>
        </collection>
    </resultMap>

    <select id="selectTrackProjectStatus" resultMap="trackProjectStatusMap">
        WITH project_stats AS (
            SELECT
                COUNT(DISTINCT tt.id) as total_teams,
                COUNT(DISTINCT CASE WHEN tt.is_completed = true THEN tt.id END) as completed_teams,
                COUNT(DISTINCT CASE WHEN ttm.track_team_id IS NULL THEN u.id END) as no_team_members_count
            FROM track_project p
                     JOIN user u ON u.generation_id = #{generationId}
                     LEFT JOIN track_excluded_member tem
                               ON tem.project_id = p.id
                                   AND tem.user_id = u.id
                     LEFT JOIN track_team tt
                               ON tt.track_project_id = p.id
                                   AND tt.generation_id = #{generationId}
                     LEFT JOIN track_team_member ttm
                               ON ttm.track_team_id = tt.id
                                   AND ttm.user_id = u.id
            WHERE p.id = #{projectId}
              AND tem.id IS NULL
        )
        SELECT
            p.id as project_id,
            p.title as project_name,
            /* 팀 정보 */
            tt.id as team_id,
            tt.is_completed,
            tm_user.id as user_id,
            tm_user.name,
            ttm.role as role,
            /* 미편성 멤버 정보 */
            no_team.id as no_team_user_id,
            no_team.name as no_team_user_name,
            NULL as no_team_role,
            /* 통계 정보 */
            ps.total_teams,
            ps.completed_teams,
            ps.no_team_members_count
        FROM track_project p
                 CROSS JOIN project_stats ps
            /* 팀 멤버 조회 */
                 LEFT JOIN (
            SELECT DISTINCT tt.*
            FROM track_team tt
            WHERE tt.track_project_id = #{projectId}
              AND tt.generation_id = #{generationId}
        ) tt ON 1=1
                 LEFT JOIN track_team_member ttm ON ttm.track_team_id = tt.id
                 LEFT JOIN user tm_user ON tm_user.id = ttm.user_id
            /* 미편성 멤버 조회 - 수정된 부분 */
                 LEFT JOIN (
            SELECT DISTINCT u.*
            FROM user u
            WHERE u.generation_id = #{generationId}
              AND NOT EXISTS (
                SELECT 1
                FROM track_team_member ttm2
                         JOIN track_team tt2 ON ttm2.track_team_id = tt2.id
                WHERE tt2.track_project_id = #{projectId}
                  AND ttm2.user_id = u.id
            )
              AND NOT EXISTS (
                SELECT 1
                FROM track_excluded_member tem
                WHERE tem.project_id = #{projectId}
                  AND tem.user_id = u.id
            )
        ) no_team ON 1=1
        WHERE p.id = #{projectId}
        ORDER BY
            tt.id,
            ttm.role = 'leader' DESC,
            tm_user.name,
            no_team.name;
    </select>

    <insert id="insertTrackTeam" parameterType="TrackTeam" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO track_team (
            generation_id,
            track_project_id
        ) VALUES(
            #{generationId},
            #{trackProjectId}
       )
    </insert>


    <insert id="insertTrackTeamMember" parameterType="TrackTeam">
        INSERT INTO track_team_member (track_team_id, user_id, role, created_at)
        VALUES
        <foreach collection="members" item="member" separator=",">
            (#{member.trackTeamId}, #{member.user.userId}, #{member.role}, CURRENT_DATE)
        </foreach>
    </insert>


    <!-- 팀 삭제 -->
    <delete id="deleteTrackTeam" parameterType="int">
        DELETE FROM track_team
        WHERE id = #{teamId}
    </delete>

    <!-- 팀 멤버 수정 -->
    <update id="updateTrackTeamMembers" parameterType="list">
        UPDATE track_team_member
        SET
        role = CASE
        <foreach collection="list" item="member">
            WHEN track_team_id = #{member.trackTeamId} AND id = #{member.trackMemberId}
            THEN #{member.role}
        </foreach>
        ELSE role
        END,
        user_id = CASE
        <foreach collection="list" item="member">
            WHEN track_team_id = #{member.trackTeamId} AND id = #{member.trackMemberId}
            THEN #{member.user.userId}
        </foreach>
        ELSE user_id
        END
        WHERE track_team_id IN
        <foreach collection="list" item="member" open="(" separator="," close=")">
            #{member.trackTeamId}
        </foreach>
        AND id IN
        <foreach collection="list" item="member" open="(" separator="," close=")">
            #{member.trackMemberId}
        </foreach>
    </update>
</mapper>