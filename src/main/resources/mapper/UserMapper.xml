<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.honeyboard.api.user.model.mapper.UserMapper">

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="user" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user (
        email,
        password,
        name,
        generation_id,
        <if test="role != null">role,</if>
        login_type,
        <if test="isSsafy != null">is_ssafy,</if>
        created_at
        ) VALUES (
        #{email},
        #{password},
        #{name},
        #{generationId},
        <if test="role != null">#{role},</if>
        #{loginType},
        <if test="isSsafy != null">#{isSsafy},</if>
        NOW()
        )
    </insert>


    <!-- ID로 사용자 조회 -->
    <select id="selectUserById" parameterType="int" resultType="user">
        SELECT id            AS userId,
               email,
               password,
               name,
               generation_id AS generationId,
               role,
               login_type    AS loginType,
               is_ssafy      AS isSsafy,
               created_at    AS createdAt
        FROM user
        WHERE id = #{userId}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="selectUserByEmail" parameterType="String" resultType="user">
        SELECT id            AS userId,
               email,
               password,
               name,
               generation_id AS generationId,
               role,
               login_type    AS loginType,
               is_ssafy      AS isSsafy,
               created_at    AS createdAt
        FROM user
        WHERE email = #{email}
    </select>

    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword" parameterType="user">
        UPDATE user
        SET password = #{password}
        WHERE id = #{userId}
    </update>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="user">
        UPDATE user
        SET name          = #{name},
            generation_id = #{generationId},
            is_ssafy      = #{isSsafy}
        WHERE id = #{userId}
    </update>

    <!-- 사용자 수료 상태 업데이트 -->
    <update id="updateUserCompletionStatus" parameterType="int">
        UPDATE user
        SET is_ssafy = false
        WHERE id = #{userId}
    </update>

    <!-- 이메일 존재 여부 확인 -->
    <select id="selectExistedEmail" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM user
        WHERE email = #{email}
    </select>

    <select id="selectActiveGenerationId" resultType="Integer">
        SELECT id
        FROM generation
        WHERE is_active = 1
    </select>

</mapper>
